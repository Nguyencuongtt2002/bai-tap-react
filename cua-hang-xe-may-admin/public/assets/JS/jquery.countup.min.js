!function (t) {
    "use strict";
    t.fn.countUp = function (e) {
        var a = t.extend({
            time: 2000,
            delay: 10
        }, e);
        return this.each(function () {
            var element = t(this),
                options = a,
                countUpFunction = function () {
                    element.data("counterupTo") || element.data("counterupTo", element.text());
                    var time = parseInt(element.data("counter-time")) > 0 ? parseInt(element.data("counter-time")) : options.time,
                        delay = parseInt(element.data("counter-delay")) > 0 ? parseInt(element.data("counter-delay")) : options.delay,
                        step = time / delay,
                        counterTo = element.data("counterupTo"),
                        nums = [counterTo],
                        hasComma = /[0-9]+,[0-9]+/.test(counterTo);
                    counterTo = counterTo.replace(/,/g, "");
                    var isInteger = (/^[0-9]+$/.test(counterTo), /^[0-9]+\.[0-9]+$/.test(counterTo)),
                        numDecimals = isInteger ? (counterTo.split(".")[1] || []).length : 0;
                    for (var i = step; i >= 1; i--) {
                        var newValue = parseInt(Math.round(counterTo / step * i));
                        if (isInteger && (newValue = parseFloat(counterTo / step * i).toFixed(numDecimals)), hasComma)
                            for (; /(\d+)(\d{3})/.test(newValue.toString());) newValue = newValue.toString().replace(/(\d+)(\d{3})/, "$1,$2");
                        nums.unshift(newValue)
                    }
                    element.data("counterup-nums", nums), element.text("0");
                    var updateText = function () {
                        element.text(element.data("counterup-nums").shift()), element.data("counterup-nums").length ? setTimeout(element.data("counterup-func"), delay) : (delete element.data("counterup-nums"), element.data("counterup-nums", null), element.data("counterup-func", null))
                    };
                    element.data("counterup-func", updateText), setTimeout(element.data("counterup-func"), delay)
                };
            element.waypoint(countUpFunction, {
                offset: "100%",
                triggerOnce: !0
            })
        })
    }
}(jQuery);
